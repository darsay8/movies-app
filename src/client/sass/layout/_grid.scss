@use '../abstracts/variables' as *;
@use '../vendors/include-media' as *;
@use 'sass:math';

.container {
  width: 100%;
  max-width: 120rem;
  margin: 0 auto;
  padding: 0 2rem;

  @include media('>=xxl') {
    max-width: 160rem;
  }
}

.row {
  display: flex;
  flex-flow: row wrap;
}

@each $key, $val in $grid-gaps {
  .gap-#{$key} > * {
    padding: $val;
  }

  .gap-#{$key} {
    margin-left: -$val;
    margin-right: -$val;
  }
}

@each $val in $layout-x-values {
  .justify-#{$val} {
    justify-content: $val;
  }
}

@each $val in $layout-y-values {
  .align-#{$val} {
    align-items: $val;
  }
}

@include media('>=xs') {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xs {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include media('>=sm') {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-sm {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include media('>=md') {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-md {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include media('>=lg') {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-lg {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include media('>=xl') {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}

@include media('>=xxl') {
  @for $i from 1 through $grid-columns {
    .col-#{$i}-xxl {
      box-sizing: border-box;
      flex-grow: 0;
      width: math.div($i * 100%, $grid-columns);
    }
  }
}
