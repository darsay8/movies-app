@use '../abstracts/variables' as *;
@use '../vendors/include-media' as *;
@use 'sass:math';

.grid {
  --grid-cols: #{$grid-columns};

  display: grid;
  grid-gap: var(--grid-gap, 0);
  grid-template-columns: repeat(var(--grid-cols), 1fr);

  & > * {
    grid-column-end: span var(--grid-cols);
  }
}

@for $i from 1 through $grid-columns {
  .col-#{$i} {
    grid-column-end: span #{$i};
  }
  .col-start-#{$i} {
    grid-column-start: #{$i};
  }
  .col-end-#{$i + 1} {
    grid-column-end: #{$i + 1};
  }

  @include media('<sm') {
    .col-xs-#{$i} {
      grid-column-end: span #{$i};
    }
  }

  @include media('>=sm') {
    .col-sm-#{$i} {
      grid-column-end: span #{$i};
    }
  }

  @include media('>=md') {
    .col-md-#{$i} {
      grid-column-end: span #{$i};
    }
  }
  @include media('>=lg') {
    .col-lg-#{$i} {
      grid-column-end: span #{$i};
    }
  }

  @include media('>=xl') {
    .col-xl-#{$i} {
      grid-column-end: span #{$i} !important;
    }
  }
}

.grid-auto-xs,
.grid-auto-sm,
.grid-auto-md,
.grid-auto-lg,
.grid-auto-xl {
  display: grid;
  grid-gap: var(--grid-gap, 0);
  grid-template-columns: repeat(auto-fit, minmax(var(--col-min-width), 1fr));
}

.grid-auto-xs {
  --col-min-width: 8rem;
}
.grid-auto-sm {
  --col-min-width: 10rem;
}
.grid-auto-md {
  --col-min-width: 15rem;
}
.grid-auto-lg {
  --col-min-width: 20rem;
}
.grid-auto-xl {
  --col-min-width: 25rem;
}

.grid-gap-xs {
  --grid-gap: var(--space-xs, 0.5rem);
}
.grid-gap-sm {
  --grid-gap: var(--space-sm, 0.75rem);
}
.grid-gap-md {
  --grid-gap: var(--space-md, 1.25rem);
}
.grid-gap-lg {
  --grid-gap: var(--space-lg, 2rem);
}
.grid-gap-xl {
  --grid-gap: var(--space-xl, 3.25rem);
}
